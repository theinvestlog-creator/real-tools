---
import fs from 'node:fs/promises';
import path from 'node:path';

type Item = { slug: string; name?: string; type?: string; summary?: string; since?: string };

async function readIndex(): Promise<Item[]> {
  try {
    const p = path.join(process.cwd(), 'public', 'data', 'indicators', 'index.json');
    const raw = await fs.readFile(p, 'utf-8');
    const j = JSON.parse(raw);
    return Array.isArray(j?.items) ? j.items : [];
  } catch {
    return [];
  }
}

const items = await readIndex();
---

<section class="content-header">
  <div class="container-fluid">
    <div class="row mb-2">
      <div class="col-sm-6">
        <h1>Indicators</h1>
      </div>
      <div class="col-sm-6">
        <ol class="breadcrumb float-sm-right">
          <li class="breadcrumb-item"><a href="/">Home</a></li>
          <li class="breadcrumb-item active">Indicators</li>
        </ol>
      </div>
    </div>
  </div>
</section>

<section class="content">
  <div class="container-fluid">
    {items.length === 0 ? (
      <div class="alert alert-info">No indicators found at build time.</div>
    ) : (
      <div class="row">
        {items.map((it) => (
          <div class="col-md-6 col-lg-4 mb-3">
            <div class="card h-100">
              <div class="card-body">
                <a href={`/indicators/${it.slug}/`} class="stretched-link">
                  {it.name ?? it.slug}{it.type ? ` â€” ${it.type}` : ''}
                </a>
                {it.summary && <p class="mb-0 mt-2 text-muted">{it.summary}</p>}
              </div>
              {it.since && (
                <div class="card-footer text-muted small">
                  Since {it.since}
                </div>
              )}
            </div>
          </div>
        ))}
      </div>
    )}
  </div>
</section>
